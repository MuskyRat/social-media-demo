{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/My posts/MyPosts.module.css","components/Profile/My posts/Post/Post.module.css","components/Profile/My posts/Post/Post.jsx","components/Profile/My posts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/My posts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","style","item","src","message","likesCount","MyPosts","React","memo","postsElements","posts","map","p","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","Component","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.6eb9ff5a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__17TWb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__15hVd\",\"posts\":\"MyPosts_posts__16qJh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2TuoP\"};","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    \r\n    return (\r\n                <div className={style.item}>\r\n                    <img src='https://www.indiewire.com/wp-content/uploads/2019/03/shutterstock_5885988bd.jpg' />\r\n                    {props.message}\r\n                    <div>\r\n                        <span>Like {props.likesCount}</span>\r\n                    </div>\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst MyPosts = React.memo( (props) => {\r\n\r\n    let postsElements = props.posts.map((p) => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return <div className={style.postsBlock}>\r\n        <h3>My posts</h3>\r\n        <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n        <div className={style.posts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name={\"newPostText\"} component={Textarea} placeholder=\"Enter your post\"\r\n            validate={[required, maxLength10]}/>\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState( {\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState( {\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({status: e.currentTarget.value});\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({status: this.props.status});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={ this.activateEditMode }>{this.props.status || '----'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={ this.deactivateEditMode } value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useState, useEffect} from 'react';\r\nimport style from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={ activateEditMode }>{props.status || '----'}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange}  autoFocus={true} onBlur={ deactivateEditMode } value={status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n    if(!profile) {\r\n        return <Preloader />\r\n    }\r\n    return <div>\r\n                <div className={style.descriptionBlock}>\r\n                    <img src={profile.photos.large} />\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n            </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n// const MyPostsContainer = () => {\r\n//\r\n//     // let state = props.store.getState();\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             { store => {\r\n//                 let state = store.getState();\r\n//                 let addPost = () => {\r\n//                     store.dispatch(addPostActionCreator());\r\n//                 };\r\n//\r\n//                 let onPostChange = (text) => {\r\n//                     let action = updateNewPostTextActionCreator(text);\r\n//                     store.dispatch(action);\r\n//                 };\r\n//                 return <MyPosts updateNewPostText={onPostChange} addPost={addPost} posts={state.profilePage.posts}\r\n//                      newPostText={state.profilePage.newPostText}/>\r\n//             }\r\n//         }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\nconst mapStateToToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport MyPosts from './My posts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport style from './Profile.module.css';\r\nimport MyPostsContainer from \"./My posts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return <div>\r\n                <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n                {/*<MyPostsContainer store={props.store} />*/}\r\n                <MyPostsContainer />\r\n            </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId=this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        };\r\n        this.props.getUserProfile(userId);\r\n        //setTimeout( () => {\r\n            this.props.getStatus(userId);\r\n           // }, 1000);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return <div>\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n)(ProfileContainer);"],"sourceRoot":""}